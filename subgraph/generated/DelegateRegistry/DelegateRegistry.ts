// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DelegateAdded extends ethereum.Event {
  get params(): DelegateAdded__Params {
    return new DelegateAdded__Params(this);
  }
}

export class DelegateAdded__Params {
  _event: DelegateAdded;

  constructor(event: DelegateAdded) {
    this._event = event;
  }

  get delegateAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenChainId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get metadata(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class DelegateRemoved extends ethereum.Event {
  get params(): DelegateRemoved__Params {
    return new DelegateRemoved__Params(this);
  }
}

export class DelegateRemoved__Params {
  _event: DelegateRemoved;

  constructor(event: DelegateRemoved) {
    this._event = event;
  }

  get delegateAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenChainId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class DelegateRegistry extends ethereum.SmartContract {
  static bind(address: Address): DelegateRegistry {
    return new DelegateRegistry("DelegateRegistry", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DEREGISTER_TYPEHASH(): Bytes {
    let result = super.call(
      "DEREGISTER_TYPEHASH",
      "DEREGISTER_TYPEHASH():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEREGISTER_TYPEHASH(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEREGISTER_TYPEHASH",
      "DEREGISTER_TYPEHASH():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  PROVIDER_ROLE(): Bytes {
    let result = super.call("PROVIDER_ROLE", "PROVIDER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_PROVIDER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "PROVIDER_ROLE",
      "PROVIDER_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  REGISTER_TYPEHASH(): Bytes {
    let result = super.call(
      "REGISTER_TYPEHASH",
      "REGISTER_TYPEHASH():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_REGISTER_TYPEHASH(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "REGISTER_TYPEHASH",
      "REGISTER_TYPEHASH():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  delegates(param0: Address, param1: Address, param2: BigInt): i32 {
    let result = super.call(
      "delegates",
      "delegates(address,address,uint256):(uint8)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2)
      ]
    );

    return result[0].toI32();
  }

  try_delegates(
    param0: Address,
    param1: Address,
    param2: BigInt
  ): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "delegates",
      "delegates(address,address,uint256):(uint8)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  expiryDateForRegistryBackfill(): BigInt {
    let result = super.call(
      "expiryDateForRegistryBackfill",
      "expiryDateForRegistryBackfill():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_expiryDateForRegistryBackfill(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "expiryDateForRegistryBackfill",
      "expiryDateForRegistryBackfill():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isDelegateRegistered(
    delegateAddress: Address,
    tokenAddress: Address,
    tokenChainId: BigInt
  ): i32 {
    let result = super.call(
      "isDelegateRegistered",
      "isDelegateRegistered(address,address,uint256):(uint8)",
      [
        ethereum.Value.fromAddress(delegateAddress),
        ethereum.Value.fromAddress(tokenAddress),
        ethereum.Value.fromUnsignedBigInt(tokenChainId)
      ]
    );

    return result[0].toI32();
  }

  try_isDelegateRegistered(
    delegateAddress: Address,
    tokenAddress: Address,
    tokenChainId: BigInt
  ): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "isDelegateRegistered",
      "isDelegateRegistered(address,address,uint256):(uint8)",
      [
        ethereum.Value.fromAddress(delegateAddress),
        ethereum.Value.fromAddress(tokenAddress),
        ethereum.Value.fromUnsignedBigInt(tokenChainId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  nonces(param0: Address): BigInt {
    let result = super.call("nonces", "nonces(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_nonces(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nonces", "nonces(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get admin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DeregisterDelegateCall extends ethereum.Call {
  get inputs(): DeregisterDelegateCall__Inputs {
    return new DeregisterDelegateCall__Inputs(this);
  }

  get outputs(): DeregisterDelegateCall__Outputs {
    return new DeregisterDelegateCall__Outputs(this);
  }
}

export class DeregisterDelegateCall__Inputs {
  _call: DeregisterDelegateCall;

  constructor(call: DeregisterDelegateCall) {
    this._call = call;
  }

  get tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenChainId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DeregisterDelegateCall__Outputs {
  _call: DeregisterDelegateCall;

  constructor(call: DeregisterDelegateCall) {
    this._call = call;
  }
}

export class DeregisterDelegateBySigCall extends ethereum.Call {
  get inputs(): DeregisterDelegateBySigCall__Inputs {
    return new DeregisterDelegateBySigCall__Inputs(this);
  }

  get outputs(): DeregisterDelegateBySigCall__Outputs {
    return new DeregisterDelegateBySigCall__Outputs(this);
  }
}

export class DeregisterDelegateBySigCall__Inputs {
  _call: DeregisterDelegateBySigCall;

  constructor(call: DeregisterDelegateBySigCall) {
    this._call = call;
  }

  get tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenChainId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get nonce(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get expiry(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }
}

export class DeregisterDelegateBySigCall__Outputs {
  _call: DeregisterDelegateBySigCall;

  constructor(call: DeregisterDelegateBySigCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class RegisterDelegateCall extends ethereum.Call {
  get inputs(): RegisterDelegateCall__Inputs {
    return new RegisterDelegateCall__Inputs(this);
  }

  get outputs(): RegisterDelegateCall__Outputs {
    return new RegisterDelegateCall__Outputs(this);
  }
}

export class RegisterDelegateCall__Inputs {
  _call: RegisterDelegateCall;

  constructor(call: RegisterDelegateCall) {
    this._call = call;
  }

  get tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenChainId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get metadata(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class RegisterDelegateCall__Outputs {
  _call: RegisterDelegateCall;

  constructor(call: RegisterDelegateCall) {
    this._call = call;
  }
}

export class RegisterDelegateBySigCall extends ethereum.Call {
  get inputs(): RegisterDelegateBySigCall__Inputs {
    return new RegisterDelegateBySigCall__Inputs(this);
  }

  get outputs(): RegisterDelegateBySigCall__Outputs {
    return new RegisterDelegateBySigCall__Outputs(this);
  }
}

export class RegisterDelegateBySigCall__Inputs {
  _call: RegisterDelegateBySigCall;

  constructor(call: RegisterDelegateBySigCall) {
    this._call = call;
  }

  get tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenChainId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get metadata(): string {
    return this._call.inputValues[2].value.toString();
  }

  get nonce(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get expiry(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[5].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[7].value.toBytes();
  }
}

export class RegisterDelegateBySigCall__Outputs {
  _call: RegisterDelegateBySigCall;

  constructor(call: RegisterDelegateBySigCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetExpiryDateForRegistryBackfillCall extends ethereum.Call {
  get inputs(): SetExpiryDateForRegistryBackfillCall__Inputs {
    return new SetExpiryDateForRegistryBackfillCall__Inputs(this);
  }

  get outputs(): SetExpiryDateForRegistryBackfillCall__Outputs {
    return new SetExpiryDateForRegistryBackfillCall__Outputs(this);
  }
}

export class SetExpiryDateForRegistryBackfillCall__Inputs {
  _call: SetExpiryDateForRegistryBackfillCall;

  constructor(call: SetExpiryDateForRegistryBackfillCall) {
    this._call = call;
  }

  get expiry(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetExpiryDateForRegistryBackfillCall__Outputs {
  _call: SetExpiryDateForRegistryBackfillCall;

  constructor(call: SetExpiryDateForRegistryBackfillCall) {
    this._call = call;
  }
}

export class UploadDelegateCall extends ethereum.Call {
  get inputs(): UploadDelegateCall__Inputs {
    return new UploadDelegateCall__Inputs(this);
  }

  get outputs(): UploadDelegateCall__Outputs {
    return new UploadDelegateCall__Outputs(this);
  }
}

export class UploadDelegateCall__Inputs {
  _call: UploadDelegateCall;

  constructor(call: UploadDelegateCall) {
    this._call = call;
  }

  get delegateAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenChainId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get metadata(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class UploadDelegateCall__Outputs {
  _call: UploadDelegateCall;

  constructor(call: UploadDelegateCall) {
    this._call = call;
  }
}
